% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CellScoring.R
\name{CellScoring}
\alias{CellScoring}
\title{Cell scoring}
\usage{
CellScoring(
  srt,
  features = NULL,
  layer = "data",
  assay = NULL,
  split.by = NULL,
  IDtype = "symbol",
  species = "Homo_sapiens",
  db = "GO_BP",
  termnames = NULL,
  db_update = FALSE,
  db_version = "latest",
  convert_species = TRUE,
  Ensembl_version = NULL,
  mirror = NULL,
  minGSSize = 10,
  maxGSSize = 500,
  method = "Seurat",
  classification = TRUE,
  name = "",
  new_assay = FALSE,
  seed = 11,
  cores = 1,
  verbose = TRUE,
  ...
)
}
\arguments{
\item{srt}{A Seurat object.}

\item{features}{A named list of feature lists for scoring. If NULL, \code{db} will be used to create features sets.}

\item{layer}{The layer of the Seurat object to use for scoring. Defaults to "data".}

\item{assay}{The assay of the Seurat object to use for scoring. Defaults to NULL, in which case the default assay of the object is used.}

\item{split.by}{A cell metadata variable used for splitting the Seurat object into subsets and performing scoring on each subset. Defaults to NULL.}

\item{IDtype}{A character vector specifying the type of gene IDs in the \code{srt} object or \code{geneID} argument.
This argument is used to convert the gene IDs to a different type if \code{IDtype} is different from \code{result_IDtype}.}

\item{species}{A character vector specifying the species for which the analysis is performed.}

\item{db}{A character vector specifying the name of the database to be used for enrichment analysis.}

\item{termnames}{A vector of term names to be used from the database. Defaults to NULL, in which case all features from the database are used.}

\item{db_update}{Whether the gene annotation databases should be forcefully updated.
If set to FALSE, the function will attempt to load the cached databases instead.
Default is FALSE.}

\item{db_version}{A character vector specifying the version of the database to be used.
This argument is ignored if \code{db_update} is \code{TRUE}.
Default is "latest".}

\item{convert_species}{Whether to use a species-converted database when the annotation is missing for the specified species.
The default value is TRUE.}

\item{Ensembl_version}{Ensembl database version. If NULL, use the current release version.}

\item{mirror}{Specify an Ensembl mirror to connect to. The valid options here are \code{"www"}, \code{"uswest"}, \code{"useast"}, \code{"asia"}.}

\item{minGSSize}{The minimum size of a gene set to be considered in the enrichment analysis.}

\item{maxGSSize}{The maximum size of a gene set to be considered in the enrichment analysis.}

\item{method}{The method to use for scoring. Can be "Seurat", "AUCell", or "UCell". Defaults to "Seurat".}

\item{classification}{Whether to perform classification based on the scores. Defaults to TRUE.}

\item{name}{The name of the assay to store the scores in. Only used if new_assay is TRUE. Defaults to an empty string.}

\item{new_assay}{Whether to create a new assay for storing the scores. Defaults to FALSE.}

\item{seed}{The random seed for reproducibility. Defaults to 11.}

\item{cores}{The number of cores to use for parallelization with \link[foreach:foreach]{foreach::foreach}.
Default is \code{1}.}

\item{verbose}{Whether to print the message.
Default is \code{TRUE}.}

\item{...}{Additional arguments to be passed to the scoring methods.}
}
\description{
This function performs cell scoring on a Seurat object.
It calculates scores for a given set of features and adds the scores as metadata to the Seurat object.
}
\examples{
data(pancreas_sub)
pancreas_sub <- standard_scop(pancreas_sub)
features_all <- rownames(pancreas_sub)
pancreas_sub <- CellScoring(
  pancreas_sub,
  features = list(
    A = features_all[1:100],
    B = features_all[101:200]
  ),
  method = "Seurat",
  name = "test"
)
CellDimPlot(pancreas_sub, "test_classification")

FeatureDimPlot(pancreas_sub, "test_A")

\dontrun{
data(panc8_sub)
panc8_sub <- integration_scop(
  panc8_sub,
  batch = "tech",
  integration_method = "Seurat"
)
CellDimPlot(
  panc8_sub,
  group.by = c("tech", "celltype")
)

panc8_sub <- CellScoring(
  panc8_sub,
  layer = "data",
  assay = "RNA",
  db = "GO_BP",
  species = "Homo_sapiens",
  minGSSize = 10,
  maxGSSize = 100,
  method = "Seurat",
  name = "GO",
  new_assay = TRUE
)

panc8_sub <- integration_scop(
  panc8_sub,
  assay = "GO",
  batch = "tech",
  integration_method = "Seurat"
)
CellDimPlot(
  panc8_sub,
  group.by = c("tech", "celltype")
)

pancreas_sub <- CellScoring(
  pancreas_sub,
  layer = "data",
  assay = "RNA",
  db = "GO_BP",
  species = "Mus_musculus",
  termnames = panc8_sub[["GO"]]@meta.features[, "termnames"],
  method = "Seurat",
  name = "GO",
  new_assay = TRUE
)
pancreas_sub <- standard_scop(
  pancreas_sub,
  assay = "GO"
)
CellDimPlot(pancreas_sub, "SubCellType")

pancreas_sub[["tech"]] <- "Mouse"
panc_merge <- integration_scop(
  srt_list = list(panc8_sub, pancreas_sub),
  assay = "GO",
  batch = "tech", integration_method = "Seurat"
)
CellDimPlot(
  srt = panc_merge,
  group.by = c("tech", "celltype", "SubCellType", "Phase")
)

genenames <- make.unique(
  thisutils::capitalize(
    rownames(panc8_sub[["RNA"]])
  ),
  force_tolower = TRUE
)
names(genenames) <- rownames(panc8_sub)
panc8_sub <- RenameFeatures(
  panc8_sub,
  newnames = genenames,
  assay = "RNA"
)
head(rownames(panc8_sub))
panc_merge <- integration_scop(
  srt_list = list(panc8_sub, pancreas_sub),
  assay = "RNA",
  batch = "tech", integration_method = "Seurat"
)
CellDimPlot(
  srt = panc_merge,
  group.by = c("tech", "celltype", "SubCellType", "Phase")
)
}
}
\seealso{
\link{PrepareDB}, \link{ListDB}, \link{RunDynamicFeatures}
}
