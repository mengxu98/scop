% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RunDEtest.R
\name{RunDEtest}
\alias{RunDEtest}
\title{Differential gene test}
\usage{
RunDEtest(
  srt,
  group_by = NULL,
  group1 = NULL,
  group2 = NULL,
  cells1 = NULL,
  cells2 = NULL,
  features = NULL,
  markers_type = c("all", "paired", "conserved", "disturbed"),
  grouping.var = NULL,
  meta.method = c("maximump", "minimump", "wilkinsonp", "meanp", "sump", "votep"),
  test.use = "wilcox",
  only.pos = TRUE,
  fc.threshold = 1.5,
  base = 2,
  pseudocount.use = 1,
  mean.fxn = NULL,
  min.pct = 0.1,
  min.diff.pct = -Inf,
  max.cells.per.ident = Inf,
  latent.vars = NULL,
  min.cells.feature = 3,
  min.cells.group = 3,
  norm.method = "LogNormalize",
  p.adjust.method = "bonferroni",
  layer = "data",
  assay = NULL,
  seed = 11,
  verbose = TRUE,
  cores = 1,
  ...
)
}
\arguments{
\item{srt}{A Seurat object.}

\item{group_by}{A grouping variable in the dataset to define the groups or conditions for the differential test.
If not provided, the function uses the "active.ident" variable in the Seurat object.}

\item{group1}{A vector of cell IDs or a character vector specifying the cells that belong to the first group.
If both group_by and group1 are provided, group1 takes precedence.}

\item{group2}{A vector of cell IDs or a character vector specifying the cells that belong to the second group.
This parameter is only used when group_by or group1 is provided.}

\item{cells1}{A vector of cell IDs specifying the cells that belong to group1. If provided, group1 is ignored.}

\item{cells2}{A vector of cell IDs specifying the cells that belong to group2.
This parameter is only used when cells1 is provided.}

\item{features}{A vector of gene names specifying the features to consider for the differential test.
If not provided, all features in the dataset are considered.}

\item{markers_type}{A character value specifying the type of markers to find.
Possible values are "all", "paired", "conserved", and "disturbed".}

\item{grouping.var}{A character value specifying the grouping variable for finding conserved or disturbed markers.
This parameter is only used when markers_type is "conserved" or "disturbed".}

\item{meta.method}{A character value specifying the method to use for combining p-values in the conserved markers test.
Possible values are "maximump", "minimump", "wilkinsonp", "meanp", "sump", and "votep".}

\item{test.use}{Denotes which test to use. Available options are:
\itemize{
 \item{"wilcox"} : Identifies differentially expressed genes between two
 groups of cells using a Wilcoxon Rank Sum test (default); will use a fast
 implementation by Presto if installed
 \item{"wilcox_limma"} : Identifies differentially expressed genes between two
 groups of cells using the limma implementation of the Wilcoxon Rank Sum test;
 set this option to reproduce results from Seurat v4
 \item{"bimod"} : Likelihood-ratio test for single cell gene expression,
 (McDavid et al., Bioinformatics, 2013)
 \item{"roc"} : Identifies 'markers' of gene expression using ROC analysis.
 For each gene, evaluates (using AUC) a classifier built on that gene alone,
 to classify between two groups of cells. An AUC value of 1 means that
 expression values for this gene alone can perfectly classify the two
 groupings (i.e. Each of the cells in cells.1 exhibit a higher level than
 each of the cells in cells.2). An AUC value of 0 also means there is perfect
 classification, but in the other direction. A value of 0.5 implies that
 the gene has no predictive power to classify the two groups. Returns a
 'predictive power' (abs(AUC-0.5) * 2) ranked matrix of putative differentially
 expressed genes.
 \item{"t"} : Identify differentially expressed genes between two groups of
 cells using the Student's t-test.
 \item{"negbinom"} : Identifies differentially expressed genes between two
  groups of cells using a negative binomial generalized linear model.
  Use only for UMI-based datasets
 \item{"poisson"} : Identifies differentially expressed genes between two
  groups of cells using a poisson generalized linear model.
  Use only for UMI-based datasets
 \item{"LR"} : Uses a logistic regression framework to determine differentially
 expressed genes. Constructs a logistic regression model predicting group
 membership based on each feature individually and compares this to a null
 model with a likelihood ratio test.
 \item{"MAST"} : Identifies differentially expressed genes between two groups
 of cells using a hurdle model tailored to scRNA-seq data. Utilizes the MAST
 package to run the DE testing.
 \item{"DESeq2"} : Identifies differentially expressed genes between two groups
 of cells based on a model using DESeq2 which uses a negative binomial
 distribution (Love et al, Genome Biology, 2014).This test does not support
 pre-filtering of genes based on average difference (or percent detection rate)
 between cell groups. However, genes may be pre-filtered based on their
 minimum detection rate (min.pct) across both cell groups. To use this method,
 please install DESeq2, using the instructions at
 https://bioconductor.org/packages/release/bioc/html/DESeq2.html
}}

\item{only.pos}{Only return positive markers (FALSE by default)}

\item{fc.threshold}{A numeric value used to filter genes for testing based on their average fold change between/among the two groups.
Default is 1.5.}

\item{base}{The base with respect to which logarithms are computed.}

\item{pseudocount.use}{Pseudocount to add to averaged expression values when
calculating logFC. 1 by default.}

\item{mean.fxn}{Function to use for fold change or average difference calculation.
The default depends on the the value of \code{fc.slot}:
\itemize{
 \item{"counts"} : difference in the log of the mean counts, with pseudocount.
 \item{"data"} : difference in the log of the average exponentiated data, with pseudocount.
 This adjusts for differences in sequencing depth between cells, and assumes that "data"
 has been log-normalized.
 \item{"scale.data"} : difference in the means of scale.data.
}}

\item{min.pct}{only test genes that are detected in a minimum fraction of
min.pct cells in either of the two populations. Meant to speed up the function
by not testing genes that are very infrequently expressed. Default is 0.01}

\item{min.diff.pct}{only test genes that show a minimum difference in the
fraction of detection between the two groups. Set to -Inf by default}

\item{max.cells.per.ident}{Down sample each identity class to a max number.
Default is no downsampling. Not activated by default (set to Inf)}

\item{latent.vars}{Variables to test, used only when \code{test.use} is one of
'LR', 'negbinom', 'poisson', or 'MAST'}

\item{min.cells.feature}{Minimum number of cells expressing the feature in at least one
of the two groups, currently only used for poisson and negative binomial tests}

\item{min.cells.group}{Minimum number of cells in one of the groups}

\item{norm.method}{Normalization method for fold change calculation when layer is 'data'.
Default is "LogNormalize".}

\item{p.adjust.method}{A character value specifying the method to use for adjusting p-values.
Default is "bonferroni".}

\item{layer}{The layer used.}

\item{assay}{Assay to use in differential expression testing}

\item{seed}{An integer value specifying the seed.
Default is 11.}

\item{verbose}{Print a progress bar once expression testing begins}

\item{cores}{The number of cores to use for parallelization with \link[foreach:foreach]{foreach::foreach}.
Default is \code{1}.}

\item{...}{Additional arguments to pass to the \link[Seurat:FindMarkers]{Seurat::FindMarkers} function.}
}
\description{
This function utilizes the Seurat package to perform a differential expression (DE) test on gene expression data.
Users have the flexibility to specify custom cell groups, marker types, and various options for DE analysis.
}
\examples{
data(pancreas_sub)
pancreas_sub <- standard_scop(pancreas_sub)
pancreas_sub <- RunDEtest(
  pancreas_sub,
  group_by = "SubCellType"
)
AllMarkers <- dplyr::filter(
  pancreas_sub@tools$DEtest_SubCellType$AllMarkers_wilcox,
  p_val_adj < 0.05 & avg_log2FC > 1
)
table(AllMarkers$group1)
ht1 <- GroupHeatmap(
  pancreas_sub,
  features = AllMarkers$gene,
  feature_split = AllMarkers$group1,
  group.by = "SubCellType"
)
ht1$plot

TopMarkers <- AllMarkers |>
  dplyr::group_by(gene) |>
  dplyr::top_n(1, avg_log2FC) |>
  dplyr::group_by(group1) |>
  dplyr::top_n(3, avg_log2FC)
ht2 <- GroupHeatmap(
  pancreas_sub,
  features = TopMarkers$gene,
  feature_split = TopMarkers$group1,
  group.by = "SubCellType",
  show_row_names = TRUE
)
ht2$plot

pancreas_sub <- RunDEtest(
  pancreas_sub,
  group_by = "SubCellType",
  markers_type = "paired"
)
PairedMarkers <- dplyr::filter(
  pancreas_sub@tools$DEtest_SubCellType$PairedMarkers_wilcox,
  p_val_adj < 0.05 & avg_log2FC > 1
)
ht3 <- GroupHeatmap(
  pancreas_sub,
  features = PairedMarkers$gene,
  feature_split = PairedMarkers$group1,
  group.by = "SubCellType"
)
ht3$plot

data(panc8_sub)
panc8_sub <- integration_scop(
  panc8_sub,
  batch = "tech",
  integration_method = "Seurat"
)
CellDimPlot(
  panc8_sub,
  group.by = c("celltype", "tech")
)

panc8_sub <- RunDEtest(
  srt = panc8_sub,
  group_by = "celltype",
  grouping.var = "tech",
  markers_type = "conserved"
)
ConservedMarkers1 <- dplyr::filter(
  panc8_sub@tools$DEtest_celltype$ConservedMarkers_wilcox,
  p_val_adj < 0.05 & avg_log2FC > 1
)
ht4 <- GroupHeatmap(
  panc8_sub,
  layer = "data",
  features = ConservedMarkers1$gene,
  feature_split = ConservedMarkers1$group1,
  group.by = "tech",
  split.by = "celltype",
  within_groups = TRUE
)
ht4$plot

panc8_sub <- RunDEtest(
  srt = panc8_sub,
  group_by = "tech",
  grouping.var = "celltype",
  markers_type = "conserved"
)
ConservedMarkers2 <- dplyr::filter(
  panc8_sub@tools$DEtest_tech$ConservedMarkers_wilcox,
  p_val_adj < 0.05 & avg_log2FC > 1
)
table(ConservedMarkers2$group1)
ht4 <- GroupHeatmap(
  srt = panc8_sub,
  layer = "data",
  features = ConservedMarkers2$gene,
  feature_split = ConservedMarkers2$group1,
  group.by = "tech",
  split.by = "celltype"
)
ht4$plot

panc8_sub <- RunDEtest(
  srt = panc8_sub,
  group_by = "celltype",
  grouping.var = "tech",
  markers_type = "disturbed"
)
DisturbedMarkers <- dplyr::filter(
  panc8_sub@tools$DEtest_celltype$DisturbedMarkers_wilcox,
  p_val_adj < 0.05 & avg_log2FC > 1 & var1 == "smartseq2"
)
table(DisturbedMarkers$group1)
ht5 <- GroupHeatmap(
  srt = panc8_sub,
  layer = "data",
  features = DisturbedMarkers$gene,
  feature_split = DisturbedMarkers$group1,
  group.by = "celltype",
  split.by = "tech"
)
ht5$plot

gene_specific <- names(which(table(DisturbedMarkers$gene) == 1))
DisturbedMarkers_specific <- DisturbedMarkers[
  DisturbedMarkers$gene \%in\% gene_specific,
]
table(DisturbedMarkers_specific$group1)
ht6 <- GroupHeatmap(
  srt = panc8_sub,
  layer = "data",
  features = DisturbedMarkers_specific$gene,
  feature_split = DisturbedMarkers_specific$group1,
  group.by = "celltype",
  split.by = "tech"
)
ht6$plot

ht7 <- GroupHeatmap(
  srt = panc8_sub,
  layer = "data",
  aggregate_fun = function(x) mean(expm1(x)) + 1,
  features = DisturbedMarkers_specific$gene,
  feature_split = DisturbedMarkers_specific$group1,
  group.by = "celltype",
  grouping.var = "tech",
  numerator = "smartseq2"
)
ht7$plot
}
\seealso{
\link{RunEnrichment}, \link{RunGSEA}, \link{GroupHeatmap}
}
