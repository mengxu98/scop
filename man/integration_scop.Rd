% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/integration.R
\name{integration_scop}
\alias{integration_scop}
\title{The integration_scop function}
\usage{
integration_scop(
  srt_merge = NULL,
  batch,
  append = TRUE,
  srt_list = NULL,
  assay = NULL,
  integration_method = "Uncorrected",
  do_normalization = NULL,
  normalization_method = "LogNormalize",
  do_HVF_finding = TRUE,
  HVF_source = "separate",
  HVF_method = "vst",
  nHVF = 2000,
  HVF_min_intersection = 1,
  HVF = NULL,
  do_scaling = TRUE,
  vars_to_regress = NULL,
  regression_model = "linear",
  scale_within_batch = FALSE,
  linear_reduction = "pca",
  linear_reduction_dims = 50,
  linear_reduction_dims_use = NULL,
  linear_reduction_params = list(),
  force_linear_reduction = FALSE,
  nonlinear_reduction = "umap",
  nonlinear_reduction_dims = c(2, 3),
  nonlinear_reduction_params = list(),
  force_nonlinear_reduction = TRUE,
  neighbor_metric = "euclidean",
  neighbor_k = 20L,
  cluster_algorithm = "louvain",
  cluster_resolution = 0.6,
  seed = 11,
  verbose = TRUE,
  ...
)
}
\arguments{
\item{srt_merge}{A merged `Seurat` object that includes the batch information.}

\item{batch}{A character string specifying the batch variable name.}

\item{append}{The integrated data will be appended to the original Seurat object (srt_merge).
Default is \code{TRUE}.}

\item{srt_list}{A list of \code{Seurat} objects to be checked and preprocessed.}

\item{assay}{The name of the assay to be used for downstream analysis.}

\item{integration_method}{A character string specifying the integration method to use.
Supported methods are: \code{"Uncorrected"}, \code{"Seurat"}, \code{"scVI"}, \code{"MNN"}, \code{"fastMNN"},
\code{"Harmony"}, \code{"Scanorama"}, \code{"BBKNN"}, \code{"CSS"}, \code{"LIGER"}, \code{"Conos"}, \code{"ComBat"}.
Default is \code{"Uncorrected"}.}

\item{do_normalization}{Whether data normalization should be performed.
Default is \code{TRUE}.}

\item{normalization_method}{The normalization method to be used.
Possible values are \code{"LogNormalize"}, \code{"SCT"}, and \code{"TFIDF"}.
Default is \code{"LogNormalize"}.}

\item{do_HVF_finding}{Whether highly variable feature (HVF) finding should be performed.
Default is \code{TRUE}.}

\item{HVF_source}{The source of highly variable features.
Possible values are \code{"global"} and \code{"separate"}.
Default is \code{"separate"}.}

\item{HVF_method}{The method for selecting highly variable features.
Default is \code{"vst"}.}

\item{nHVF}{The number of highly variable features to select.
Default is \code{2000}.}

\item{HVF_min_intersection}{The feature needs to be present in batches for a minimum number of times in order to be considered as highly variable.
The default value is \code{1}.}

\item{HVF}{A vector of highly variable features.
Default is \code{NULL}.}

\item{do_scaling}{Whether to perform scaling.
If \code{TRUE}, the function will force to scale the data using the \link[Seurat:ScaleData]{Seurat::ScaleData} function.}

\item{vars_to_regress}{A vector of variable names to include as additional regression variables.
Default is \code{NULL}.}

\item{regression_model}{The regression model to use for scaling.
Options are \code{"linear"}, \code{"poisson"}, or \code{"negativebinomial"}.
Default is \code{"linear"}.}

\item{scale_within_batch}{Whether to scale data within each batch.
Only valid when the \code{integration_method} is one of \code{"Uncorrected"},
\code{"Seurat"}, \code{"MNN"}, \code{"Harmony"}, \code{"BBKNN"}, \code{"CSS"}, \code{"ComBat"}.}

\item{linear_reduction}{The linear dimensionality reduction method to use.
Options are \code{"pca"}, \code{"svd"}, \code{"ica"}, \code{"nmf"}, \code{"mds"}, or \code{"glmpca"}.
Default is \code{"pca"}.}

\item{linear_reduction_dims}{The number of dimensions to keep after linear dimensionality reduction.
Default is \code{50}.}

\item{linear_reduction_dims_use}{The dimensions to use for downstream analysis.
If \code{NULL}, all dimensions will be used.}

\item{linear_reduction_params}{A list of parameters to pass to the linear dimensionality reduction method.}

\item{force_linear_reduction}{Whether to force linear dimensionality reduction even if the specified reduction is already present in the Seurat object.}

\item{nonlinear_reduction}{The nonlinear dimensionality reduction method to use.
Options are \code{"umap"}, \code{"umap-naive"}, \code{"tsne"}, \code{"dm"},
\code{"phate"}, \code{"pacmap"}, \code{"trimap"}, \code{"largevis"}, or \code{"fr"}.
Default is \code{"umap"}.}

\item{nonlinear_reduction_dims}{The number of dimensions to keep after nonlinear dimensionality reduction.
If a vector is provided, different numbers of dimensions can be specified for each method.
Default is \code{c(2, 3)}.}

\item{nonlinear_reduction_params}{A list of parameters to pass to the nonlinear dimensionality reduction method.}

\item{force_nonlinear_reduction}{Whether to force nonlinear dimensionality reduction even if the specified reduction is already present in the Seurat object.
Default is \code{TRUE}.}

\item{neighbor_metric}{The distance metric to use for finding neighbors.
Options are \code{"euclidean"}, \code{"cosine"}, \code{"manhattan"}, or \code{"hamming"}.
Default is \code{"euclidean"}.}

\item{neighbor_k}{The number of nearest neighbors to use for finding neighbors.
Default is \code{20}.}

\item{cluster_algorithm}{The clustering algorithm to use.
Options are \code{"louvain"}, \code{"slm"}, or \code{"leiden"}.
Default is \code{"louvain"}.}

\item{cluster_resolution}{The resolution parameter to use for clustering.
Larger values result in fewer clusters.
Default is \code{0.6}.}

\item{seed}{An integer specifying the random seed for reproducibility.
Default is \code{11}.}

\item{verbose}{Whether to print the message.
Default is \code{TRUE}.}

\item{...}{Additional arguments to be passed to the integration method function.}
}
\value{
A \code{Seurat} object.
}
\description{
Integrate single-cell RNA-seq data using various integration methods.
}
\examples{
data(panc8_sub)
panc8_sub <- integration_scop(
  panc8_sub,
  batch = "tech",
  integration_method = "Uncorrected"
)
CellDimPlot(
  panc8_sub,
  group.by = c("tech", "celltype")
)

panc8_sub <- integration_scop(
  panc8_sub,
  batch = "tech",
  integration_method = "Uncorrected",
  HVF_min_intersection = 5
)
CellDimPlot(
  panc8_sub,
  group.by = c("tech", "celltype")
)

panc8_sub <- integration_scop(
  panc8_sub,
  batch = "tech",
  integration_method = "Uncorrected",
  HVF_min_intersection = 5,
  scale_within_batch = TRUE
)
CellDimPlot(
  panc8_sub,
  group.by = c("tech", "celltype")
)

panc8_sub <- integration_scop(
  panc8_sub,
  batch = "tech",
  integration_method = "Seurat"
)
CellDimPlot(panc8_sub, group.by = c("tech", "celltype"))

\dontrun{
panc8_sub <- integration_scop(
  panc8_sub,
  batch = "tech",
  integration_method = "Seurat",
  FindIntegrationAnchors_params = list(reduction = "rpca")
)
CellDimPlot(panc8_sub, group.by = c("tech", "celltype"))

integration_methods <- c(
  "Uncorrected", "Seurat", "scVI", "MNN", "fastMNN", "Harmony",
  "Scanorama", "BBKNN", "CSS", "LIGER", "Conos", "ComBat"
)
for (method in integration_methods) {
  panc8_sub <- integration_scop(
    panc8_sub,
    batch = "tech",
    integration_method = method,
    linear_reduction_dims_use = 1:50,
    nonlinear_reduction = "umap"
  )
  print(
    CellDimPlot(panc8_sub,
      group.by = c("tech", "celltype"),
      reduction = paste0(method, "UMAP2D"),
      xlab = "", ylab = "", title = method,
      legend.position = "none", theme_use = "theme_blank"
    )
  )
}

nonlinear_reductions <- c(
  "umap", "tsne", "dm", "phate",
  "pacmap", "trimap", "largevis", "fr"
)
panc8_sub <- integration_scop(
  panc8_sub,
  batch = "tech",
  integration_method = "Seurat",
  linear_reduction_dims_use = 1:50,
  nonlinear_reduction = nonlinear_reductions
)
for (nr in nonlinear_reductions) {
  print(
    CellDimPlot(
      panc8_sub,
      group.by = c("tech", "celltype"),
      reduction = paste0("Seurat", nr, "2D"),
      xlab = "", ylab = "", title = nr,
      legend.position = "none", theme_use = "theme_blank"
    )
  )
}
}
}
\seealso{
\link{Seurat_integrate},
\link{scVI_integrate},
\link{MNN_integrate},
\link{fastMNN_integrate},
\link{Harmony_integrate},
\link{Scanorama_integrate},
\link{BBKNN_integrate},
\link{CSS_integrate},
\link{LIGER_integrate},
\link{Conos_integrate},
\link{ComBat_integrate},
\link{standard_scop}
}
