% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/integration.R
\name{fastMNN_integrate}
\alias{fastMNN_integrate}
\title{fastMNN_integrate}
\usage{
fastMNN_integrate(
  srt_merge = NULL,
  batch = NULL,
  append = TRUE,
  srt_list = NULL,
  assay = NULL,
  do_normalization = NULL,
  normalization_method = "LogNormalize",
  do_HVF_finding = TRUE,
  HVF_source = "separate",
  HVF_method = "vst",
  nHVF = 2000,
  HVF_min_intersection = 1,
  HVF = NULL,
  fastMNN_dims_use = NULL,
  nonlinear_reduction = "umap",
  nonlinear_reduction_dims = c(2, 3),
  nonlinear_reduction_params = list(),
  force_nonlinear_reduction = TRUE,
  neighbor_metric = "euclidean",
  neighbor_k = 20L,
  cluster_algorithm = "louvain",
  cluster_resolution = 0.6,
  fastMNN_params = list(),
  seed = 11
)
}
\arguments{
\item{srt_merge}{A merged `Seurat` object that includes the batch information.}

\item{batch}{A character string specifying the batch variable name.}

\item{append}{The integrated data will be appended to the original Seurat object (srt_merge).
Default is \code{TRUE}.}

\item{srt_list}{A list of \code{Seurat} objects to be checked and preprocessed.}

\item{assay}{The name of the assay to be used for downstream analysis.}

\item{do_normalization}{Whether data normalization should be performed.
Default is \code{TRUE}.}

\item{normalization_method}{The normalization method to be used.
Possible values are \code{"LogNormalize"}, \code{"SCT"}, and \code{"TFIDF"}.
Default is \code{"LogNormalize"}.}

\item{do_HVF_finding}{A logical value indicating whether highly variable feature (HVF) finding should be performed.
Default is \code{TRUE}.}

\item{HVF_source}{The source of highly variable features.
Possible values are \code{"global"} and \code{"separate"}.
Default is \code{"separate"}.}

\item{HVF_method}{The method for selecting highly variable features.
Default is \code{"vst"}.}

\item{nHVF}{The number of highly variable features to select.
Default is \code{2000}.}

\item{HVF_min_intersection}{The feature needs to be present in batches for a minimum number of times in order to be considered as highly variable.
The default value is \code{1}.}

\item{HVF}{A vector of highly variable features.
Default is \code{NULL}.}

\item{fastMNN_dims_use}{A vector specifying the dimensions returned by fastMNN that will be utilized for downstream cell cluster finding and non-linear reduction.
If set to NULL, all the returned dimensions will be used by default.}

\item{nonlinear_reduction}{The nonlinear dimensionality reduction method to use.
Options are \code{"umap"}, \code{"umap-naive"}, \code{"tsne"}, \code{"dm"}, \code{"phate"}, \code{"pacmap"}, \code{"trimap"}, \code{"largevis"}, or \code{"fr"}.
Default is \code{"umap"}.}

\item{nonlinear_reduction_dims}{The number of dimensions to keep after nonlinear dimensionality reduction.
If a vector is provided, different numbers of dimensions can be specified for each method.
Default is \code{c(2, 3)}.}

\item{nonlinear_reduction_params}{A list of parameters to pass to the nonlinear dimensionality reduction method.}

\item{force_nonlinear_reduction}{Whether to force nonlinear dimensionality reduction even if the specified reduction is already present in the Seurat object.
Default is \code{TRUE}.}

\item{neighbor_metric}{The distance metric to use for finding neighbors.
Options are \code{"euclidean"}, \code{"cosine"}, \code{"manhattan"}, or \code{"hamming"}.
Default is \code{"euclidean"}.}

\item{neighbor_k}{The number of nearest neighbors to use for finding neighbors.
Default is \code{20}.}

\item{cluster_algorithm}{The clustering algorithm to use.
Options are \code{"louvain"}, \code{"slm"}, or \code{"leiden"}.
Default is \code{"louvain"}.}

\item{cluster_resolution}{The resolution parameter to use for clustering.
Larger values result in fewer clusters.
Default is \code{0.6}.}

\item{fastMNN_params}{A list of parameters for the batchelor::fastMNN function, default is an empty list.}

\item{seed}{An integer specifying the random seed for reproducibility.
Default is \code{11}.}
}
\description{
fastMNN_integrate
}
