% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RunGSEA.R
\name{RunGSEA}
\alias{RunGSEA}
\title{Perform the enrichment analysis (GSEA) on the genes}
\usage{
RunGSEA(
  srt = NULL,
  group_by = NULL,
  test.use = "wilcox",
  DE_threshold = "p_val_adj < 0.05",
  scoreType = "std",
  geneID = NULL,
  geneScore = NULL,
  geneID_groups = NULL,
  geneID_exclude = NULL,
  IDtype = "symbol",
  result_IDtype = "symbol",
  species = "Homo_sapiens",
  db = "GO_BP",
  db_update = FALSE,
  db_version = "latest",
  db_combine = FALSE,
  convert_species = TRUE,
  Ensembl_version = 103,
  mirror = NULL,
  TERM2GENE = NULL,
  TERM2NAME = NULL,
  minGSSize = 10,
  maxGSSize = 500,
  unlimited_db = c("Chromosome", "GeneType", "TF", "Enzyme", "CSPA"),
  GO_simplify = FALSE,
  GO_simplify_cutoff = "p.adjust < 0.05",
  simplify_method = "Wang",
  simplify_similarityCutoff = 0.7,
  cores = 1,
  verbose = TRUE
)
}
\arguments{
\item{srt}{A Seurat object containing the results of differential expression analysis (RunDEtest).
If specified, the genes and groups will be extracted from the Seurat object automatically.
If not specified, the \code{geneID} and \code{geneID_groups} arguments must be provided.}

\item{group_by}{A character vector specifying the grouping variable in the Seurat object.
This argument is only used if \code{srt} is specified.}

\item{test.use}{A character vector specifying the test to be used in differential expression analysis.
This argument is only used if \code{srt} is specified.}

\item{DE_threshold}{A character vector specifying the filter condition for differential expression analysis.
This argument is only used if \code{srt} is specified.}

\item{scoreType}{This parameter defines the GSEA score type.
Possible options are "std", "pos", "neg".
By default ("std") the enrichment score is computed as in the original GSEA.
The "pos" and "neg" score types are intended to be used for one-tailed tests
(i.e. when one is interested only in positive ("pos") or negateive ("neg") enrichment).}

\item{geneID}{A character vector specifying the gene IDs.}

\item{geneScore}{A numeric vector that specifies the gene scores,
for example, the log2(fold change) values of gene expression.}

\item{geneID_groups}{A factor vector specifying the group labels for each gene.}

\item{geneID_exclude}{A character vector specifying the gene IDs to be excluded from the analysis.}

\item{IDtype}{A character vector specifying the type of gene IDs in the \code{srt} object or \code{geneID} argument.
This argument is used to convert the gene IDs to a different type if \code{IDtype} is different from \code{result_IDtype}.}

\item{result_IDtype}{A character vector specifying the desired type of gene ID to be used in the output.
This argument is used to convert the gene IDs from \code{IDtype} to \code{result_IDtype}.}

\item{species}{A character vector specifying the species for which the analysis is performed.}

\item{db}{A character vector specifying the name of the database to be used for enrichment analysis.}

\item{db_update}{Whether the gene annotation databases should be forcefully updated.
If set to FALSE, the function will attempt to load the cached databases instead.
Default is FALSE.}

\item{db_version}{A character vector specifying the version of the database to be used.
This argument is ignored if \code{db_update} is \code{TRUE}.
Default is "latest".}

\item{db_combine}{Whether to combine multiple databases into one.
If TRUE, all database specified by \code{db} will be combined as one named "Combined".}

\item{convert_species}{Whether to use a species-converted database when the annotation is missing for the specified species.
The default value is TRUE.}

\item{Ensembl_version}{Ensembl database version. If NULL, use the current release version.}

\item{mirror}{Specify an Ensembl mirror to connect to. The valid options here are \code{"www"}, \code{"uswest"}, \code{"useast"}, \code{"asia"}.}

\item{TERM2GENE}{A data frame specifying the gene-term mapping for a custom database.
The first column should contain the term IDs, and the second column should contain the gene IDs.}

\item{TERM2NAME}{A data frame specifying the term-name mapping for a custom database.
The first column should contain the term IDs, and the second column should contain the corresponding term names.}

\item{minGSSize}{The minimum size of a gene set to be considered in the enrichment analysis.}

\item{maxGSSize}{The maximum size of a gene set to be considered in the enrichment analysis.}

\item{unlimited_db}{A character vector specifying the names of databases that do not have size restrictions.}

\item{GO_simplify}{Whether to simplify the GO terms.
If \code{TRUE}, additional results with simplified GO terms will be returned.}

\item{GO_simplify_cutoff}{A character vector specifying the filter condition for simplification of GO terms.
This argument is only used if \code{GO_simplify} is \code{TRUE}.}

\item{simplify_method}{A character vector specifying the method to be used for simplification of GO terms.
This argument is only used if \code{GO_simplify} is \code{TRUE}.}

\item{simplify_similarityCutoff}{The similarity cutoff for simplification of GO terms.
This argument is only used if \code{GO_simplify} is \code{TRUE}.}

\item{cores}{The number of cores to use for parallelization with \link[foreach:foreach]{foreach::foreach}.
Default is \code{1}.}

\item{verbose}{Whether to print the message.
Default is \code{TRUE}.}
}
\value{
If input is a Seurat object, returns the modified Seurat object with the enrichment result stored in the tools slot.

If input is a geneID vector with or without geneID_groups, return the enrichment result directly.

Enrichment result is a list with the following component:
\itemize{
\item \code{enrichment}: A data.frame containing all enrichment results.
\item \code{results}: A list of \code{gseaResult} objects from the DOSE package.
\item \code{geneMap}: A data.frame containing the ID mapping table for input gene IDs.
\item \code{input}: A data.frame containing the input gene IDs and gene ID groups.
\item \code{DE_threshold}: A specific threshold for differential expression analysis (only returned if input is a Seurat object).
}
}
\description{
Perform the enrichment analysis (GSEA) on the genes
}
\examples{
\dontrun{
data(pancreas_sub)
pancreas_sub <- standard_scop(pancreas_sub)
pancreas_sub <- RunDEtest(
  pancreas_sub,
  group_by = "CellType"
)
pancreas_sub <- RunGSEA(
  pancreas_sub,
  group_by = "CellType",
  DE_threshold = "p_val_adj < 0.05",
  scoreType = "std",
  db = "GO_BP",
  species = "Mus_musculus"
)
GSEAPlot(
  pancreas_sub,
  db = "GO_BP",
  group_by = "CellType",
  plot_type = "comparison"
)
GSEAPlot(
  pancreas_sub,
  db = "GO_BP",
  group_by = "CellType",
  group_use = "Ductal",
  id_use = "GO:0006412"
)
GSEAPlot(
  pancreas_sub,
  db = "GO_BP",
  group_by = "CellType",
  group_use = "Ductal",
  id_use = c(
    "GO:0046903", "GO:0015031", "GO:0007600"
  )
)

# Remove redundant GO terms
pancreas_sub <- RunGSEA(
  pancreas_sub,
  group_by = "CellType",
  db = "GO_BP",
  GO_simplify = TRUE,
  species = "Mus_musculus"
)
GSEAPlot(
  pancreas_sub,
  db = "GO_BP_sim",
  group_by = "CellType",
  plot_type = "comparison"
)

# Or use "geneID", "geneScore" and
# "geneID_groups" as input to run GSEA
de_df <- dplyr::filter(
  pancreas_sub@tools$DEtest_CellType$AllMarkers_wilcox,
  p_val_adj < 0.05
)
gsea_out <- RunGSEA(
  geneID = de_df[["gene"]],
  geneScore = de_df[["avg_log2FC"]],
  geneID_groups = de_df[["group1"]],
  db = "GO_BP",
  species = "Mus_musculus"
)
GSEAPlot(
  res = gsea_out,
  db = "GO_BP",
  plot_type = "comparison"
)

# Use a combined database
pancreas_sub <- RunGSEA(
  pancreas_sub,
  group_by = "CellType",
  db = c(
    "KEGG", "WikiPathway", "Reactome", "PFAM", "MP"
  ),
  db_combine = TRUE,
  species = "Mus_musculus"
)
GSEAPlot(
  pancreas_sub,
  db = "Combined",
  group_by = "CellType",
  plot_type = "comparison"
)
}
}
\seealso{
\link{PrepareDB}, \link{ListDB}, \link{GSEAPlot}, \link{RunEnrichment}, \link{EnrichmentPlot}
}
