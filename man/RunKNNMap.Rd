% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RunKNNMap.R
\name{RunKNNMap}
\alias{RunKNNMap}
\title{Single-cell reference mapping with KNN method}
\usage{
RunKNNMap(
  srt_query,
  srt_ref,
  query_assay = NULL,
  ref_assay = NULL,
  ref_umap = NULL,
  ref_group = NULL,
  features = NULL,
  nfeatures = 2000,
  query_reduction = NULL,
  ref_reduction = NULL,
  query_dims = 1:30,
  ref_dims = 1:30,
  projection_method = c("model", "knn"),
  nn_method = NULL,
  k = 30,
  distance_metric = "cosine",
  vote_fun = "mean"
)
}
\arguments{
\item{srt_query}{An object of class Seurat storing the query cells.}

\item{srt_ref}{An object of class Seurat storing the reference cells.}

\item{query_assay}{A character string specifying the assay name for the query cells. If not provided, the default assay for the query object will be used.}

\item{ref_assay}{A character string specifying the assay name for the reference cells. If not provided, the default assay for the reference object will be used.}

\item{ref_umap}{A character string specifying the name of the UMAP reduction in the reference object. If not provided, the first UMAP reduction found in the reference object will be used.}

\item{ref_group}{A character string specifying a metadata column name in the reference object to use for grouping.}

\item{features}{A character vector specifying the features to be used for calculating the distance metric. If not provided, the function will use the variable features calculated by the Seurat package.}

\item{nfeatures}{A integer specifying the number of highly variable features to be calculated if \code{features} is not provided.}

\item{query_reduction}{A character string specifying the name of a dimensionality reduction in the query object to use for calculating the distance metric.}

\item{ref_reduction}{A character string specifying the name of a dimensionality reduction in the reference object to use for calculating the distance metric.}

\item{query_dims}{A numeric vector specifying the dimension indices from the query reduction to be used for calculating the distance metric.}

\item{ref_dims}{A numeric vector specifying the dimension indices from the reference reduction to be used for calculating the distance metric.}

\item{projection_method}{A character string specifying the projection method to use. Options are "model" and "knn". If "model" is selected, the function will try to use a pre-trained UMAP model in the reference object for projection. If "knn" is selected, the function will directly find the nearest neighbors using the distance metric.}

\item{nn_method}{A character string specifying the nearest neighbor search method to use. Options are "raw", "annoy", and "rann". If "raw" is selected, the function will use the brute-force method to find the nearest neighbors. If "annoy" is selected, the function will use the Annoy library for approximate nearest neighbor search. If "rann" is selected, the function will use the RANN library for approximate nearest neighbor search. If not provided, the function will choose the search method based on the size of the query and reference datasets.}

\item{k}{A number of nearest neighbors to find for each cell in the query object.}

\item{distance_metric}{A character string specifying the distance metric to use for calculating the pairwise distances between cells. Options include: "pearson", "spearman", "cosine", "correlation", "jaccard", "ejaccard", "dice", "edice", "hamman", "simple matching", and "faith". Additional distance metrics can also be used, such as "euclidean", "manhattan", "hamming", etc.}

\item{vote_fun}{A character string specifying the function to be used for aggregating the nearest neighbors in the reference object. Options are "mean", "median", "sum", "min", "max", "sd", "var", etc. If not provided, the default is "mean".}
}
\description{
This function performs single-cell reference mapping using the K-nearest neighbor (KNN) method. It takes two single-cell datasets as input: srt_query and srt_ref. The function maps cells from the srt_query dataset to the srt_ref dataset based on their similarity or distance.
}
\examples{
data(panc8_sub)
panc8_sub <- standard_scop(panc8_sub)
srt_ref <- panc8_sub[, panc8_sub$tech != "fluidigmc1"]
srt_query <- panc8_sub[, panc8_sub$tech == "fluidigmc1"]
srt_ref <- integration_scop(
  srt_ref,
  batch = "tech",
  integration_method = "Seurat"
)
CellDimPlot(
  srt_ref,
  group.by = c("celltype", "tech")
)

# Set the number of threads for RcppParallel
# details see: ?RcppParallel::setThreadOptions
# if (requireNamespace("RcppParallel", quietly = TRUE)) {
#   RcppParallel::setThreadOptions()
# }
# Projection
srt_query <- RunKNNMap(
  srt_query = srt_query,
  srt_ref = srt_ref,
  ref_umap = "SeuratUMAP2D"
)
ProjectionPlot(
  srt_query = srt_query,
  srt_ref = srt_ref,
  query_group = "celltype", ref_group = "celltype"
)
}
